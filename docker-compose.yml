services:
  keycloak:
    image: quay.io/keycloak/keycloak:24.0.3
    container_name: keycloak
    command: start-dev
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak_db:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
    ports:
      - "${KEYCLOAK_HOST_PORT:-8000}:8080"
    depends_on:
      keycloak_db:
        condition: service_healthy
    restart: unless-stopped

  keycloak_db:
    image: postgres:15
    container_name: keycloak-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    ports:
      - "${POSTGRES_KEYCLOAK_HOST_PORT:-5432}:5432"
    volumes:
      - keycloak_db_data:/var/lib/postgresql/data
      - ./init-user-db.sql:/docker-entrypoint-initdb.d/init-user-db.sql:ro
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "keycloak"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  ticketing_user_db:
    image: postgres:15
    container_name: ticketing-user-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ticketing_user
      POSTGRES_USER: user_service
      POSTGRES_PASSWORD: secret
    ports:
      - "${POSTGRES_USER_HOST_PORT:-5433}:5432"
    volumes:
      - ticketing_user_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "user_service"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  opa:
    image: openpolicyagent/opa:latest
    container_name: opa
    command:
      - "run"
      - "--server"
      - "--log-level=debug"
      - "/policies"
    volumes:
      - ./opa/policies:/policies
    ports:
      - "8181:8181"

volumes:
  keycloak_db_data:
  ticketing_user_db_data: