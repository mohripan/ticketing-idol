package com.external.ticketingidoluserservice.infrastructure.web.error;

import io.vertx.ext.web.RoutingContext;

public class HttpErrorHandler {
    public static void handleError(RoutingContext ctx, Throwable ex) {
        Throwable cause = ex.getCause() != null ? ex.getCause() : ex;

        // TEMP: log full stack
        cause.printStackTrace();

        // Map common DB errors explicitly
        if (cause instanceof PgException pg) {
            String sqlState = pg.getSqlState(); // e.g., 23505 unique_violation
            String detail   = pg.getDetail();   // constraint name etc.
            int status = "23505".equals(sqlState) ? 409 : 400; // conflict for uniques
            ctx.response().setStatusCode(status)
                    .putHeader("Content-Type", "application/json")
                    .end("{\"error\":\"Database error\",\"sqlState\":\""+sqlState+"\",\"detail\":\""+(detail==null?"":detail.replace("\"","'"))+"\"}");
            return;
        }

        if (cause instanceof IllegalArgumentException) {
            ctx.response().setStatusCode(400)
                    .putHeader("Content-Type", "application/json")
                    .end("{\"error\":\"" + cause.getMessage().replace("\"","'") + "\"}");
            return;
        }

        ctx.response().setStatusCode(500)
                .putHeader("Content-Type", "application/json")
                .end("{\"error\":\"Internal Server Error\",\"type\":\""+cause.getClass().getSimpleName()+"\"}");
    }
}
